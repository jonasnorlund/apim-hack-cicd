#on: [workflow_dispatch]
on:
 push:                             # Workflow will start when code is pushed into this repo
   paths:
     - 'api/CustomerAPI/**' 
     - '.github/workflows/*'

name: Customer Api                  # Name of the workflow
jobs:
  build-and-deploy:
    runs-on: ubuntu-latest          # Base image to be used for the GitHub runner
    env:                            # List of environment variables
      directory: api/CustomerAPI    # the path of the Customer API 
      name: apimws                  # Your POSTFIX

    steps:
    - uses: actions/checkout@main       # Checkout the code to the GitHub runner 
    
    - name: Log into Azure              # Log into Azure using the service credentials provided earlier
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}

    - name: Build image with Azure Container Registry
      uses: azure/CLI@v1
      with:
        azcliversion: latest
        inlineScript: |
          az acr build --registry acr${{ env.name }}.azurecr.io --image customerapi:${{ github.run_number }} . -f api/CustomerAPI/Dockerfile 
    
    - name: Use dotnet tools to build and generate swagger
      run: |
        dotnet tool restore --tool-manifest .config/dotnet-tools.json
        dotnet restore 
        dotnet build
        dotnet swagger tofile --output $GITHUB_WORKSPACE/api/CustomerAPI/swagger-output/swagger.json $GITHUB_WORKSPACE/api/CustomerAPI/bin/Debug/net6.0/CustomerAPI.dll v1
      working-directory: ${{ env.directory }}
    
    - name: Upload swagger to Azure storage account
      uses: azure/CLI@v1
      with:
        azcliversion: latest
        inlineScript: |
          az storage blob upload -f $GITHUB_WORKSPACE/api/CustomerAPI/swagger-output/swagger.json -n swagger.json -c apidefinitions --overwrite --connection-string ${{ secrets.AZURE_STORAGE_CONNECTION_STRING }}

    - name: Deploy API to Azure Container Apps 
      uses: azure/arm-deploy@v1
      with:
        subscriptionId: ${{ secrets.AZURE_SUBSCRIPTION }}   # Subscription Id
        resourceGroupName: rg-apim-workshop              # Resource group
        template: ${{ env.directory }}/Bicep/main.bicep     # File to deploy
        parameters: dockerimagetag=${{ github.run_number }} name=${{ env.name }} apidefinitionurl=https://stg${{ env.name }}hack.blob.core.windows.net/apidefinitions/swagger.json?${{ secrets.AZURE_BLOB_SAS_TOKEN }}
        failOnStdErr: false

   