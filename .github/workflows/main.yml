# on: [workflow_dispatch]

on:
  push:
    paths:
      - 'api/CustomerAPI/**'
      - '.github/workflows/*'

name: Customer API

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    env:
      directory: api/CustomerAPI
      name: oligul

    steps:
    - uses: actions/checkout@main

    - name: Log into Azure
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}

    - name: Build image with Azure Container Registry
      uses: azure/CLI@v1
      with:
        azcliversion: latest
        inlineScript: |
          az acr build --registry acr${{ env.name }}.azurecr.io --image customerapi:${{ github.run_number }} . -f api/CustomerAPI/Dockerfile

    - name: Use dotnet tools to build and generate swagger
      run: |
        dotnet tool restore --tool-manifest .config/dotnet-tools.json
        dotnet restore 
        dotnet build
        dotnet swagger tofile --output $GITHUB_WORKSPACE/api/CustomerAPI/swagger-output/swagger.json $GITHUB_WORKSPACE/api/CustomerAPI/bin/Debug/net6.0/CustomerAPI.dll v1
      working-directory: ${{ env.directory }}

    - name: Upload swagger to Azure storage account
      uses: azure/CLI@v1
      with:
        azcliversion: latest
        inlineScript: |
          az storage blob upload -f $GITHUB_WORKSPACE/api/CustomerAPI/swagger-output/swagger.json -n swagger.json -c apidefinitions --overwrite --connection-string "${{ secrets.AZURE_STORAGE_CONNECTION_STRING }}"

    - name: Deploy API to Azure Container Apps
      uses: azure/arm-deploy@v1
      with:
        subscriptionId: ${{ secrets.AZURE_SUBSCRIPTION }} # Subscription ID
        resourceGroupName: rg-${{ env.name }} # Resource Group Name
        template: ${{ env.directory }}/Bicep/main.bicep # Path to Bicep file
        parameters: dockerimagetag=${{ github.run_number }} name=${{ env.name }} apidefinitionurl="https://stg${{ env.name }}hack.blob.core.windows.net/apidefinitions/swagger.json?${{ secrets.AZURE_BLOB_SAS_TOKEN }}" # Parameter to pass to Bicep file
        failOnStderr: false